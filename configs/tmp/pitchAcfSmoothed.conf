
 ///////////////////////////////////////////////////////////////////////////
 // openSMILE configuration template file generated by SMILExtract binary //
 // you must manually adapt this file and change at least the             //
 // 'reader/writer.dmLevel =' lines.                                      //
 ///////////////////////////////////////////////////////////////////////////

 ;===== component manager configuration (= list of enabled components!) =====

[componentInstances:cComponentManager]
 // this line configures the default data memory:
instance[dataMemory].type = cDataMemory
instance[waveSource].type = cWaveSource
instance[framer].type = cFramer
instance[energy].type = cEnergy
instance[intensity].type = cIntensity
instance[windower].type = cWindower
instance[transformFFT].type = cTransformFFT
instance[fftmp].type = cFFTmagphase
instance[acf].type = cAcf
instance[cep].type = cAcf
instance[pitchACF].type = cPitchACF
instance[contourSmoother].type = cContourSmoother
instance[csvSink].type = cCsvSink
 // Here you can control the amount of detail displayed for the data memory
  // level configuration. 0 is no information at all, 5 is maximum detail.
printLevelStats = 1
 // You can set the number of parallel threads (experimental):
nThreads = 4

// ============= component configuration sections begin here ==============


  ;;;; default (template) configuration section for component 'cWaveSource' ;;;;
[waveSource:cWaveSource]
writer.dmLevel = wave
;basePeriod = -1
filename=\cm[inputfile(I){test.wav}:name of input file]
properTimestamps = 0
monoMixdown = 0
// segmentList[] = 
start=\cm[start{0}:audio start position in seconds]
end=\cm[end{-1}:audio end position in seconds, -1 for end of file]
endrel = 0
noHeader = 0
outFieldName = pcm
 

  ;;;; default (template) configuration section for component 'cFramer' ;;;;
[framer:cFramer]
reader.dmLevel = wave
writer.dmLevel = frames
// nameAppend = 
copyInputName = 1
EOIlevel = 0
allowLastFrameIncomplete = 0
frameMode = fixed
// frameListFile = 
// frameList = 
frameSize = 0.025000
frameStep = 0.006250
frameCenterSpecial = left
noPostEOIprocessing = 1
 

  ;;;; default (template) configuration section for component 'cEnergy' ;;;;
[energy:cEnergy]
reader.dmLevel = frames
writer.dmLevel = energy
;nameAppend = energy
copyInputName = 0
EOIlevel = 0
processArrayFields = 0
includeSingleElementFields = 0
preserveFieldNames = 1
htkcompatible = 0
rms = 1
energy2 = 0
log = 0
escaleLog = 1
escaleRms = 1
escaleSquare = 1
ebiasLog = 0
ebiasRms = 0
ebiasSquare = 0
 

  ;;;; default (template) configuration section for component 'cIntensity' ;;;;
[intensity:cIntensity]
reader.dmLevel = frames
writer.dmLevel = loudness
;nameAppend = loudness
copyInputName = 0
EOIlevel = 0
processArrayFields = 1
includeSingleElementFields = 0
preserveFieldNames = 1
; enable the output of intensity I (mean of squared input values multiplied by a Hamming window)
intensity = 0
; human hearing: enable the output of loudness L : L = (I/I0)^0.3 ; I0 = 0.000001 (for sample values normalised to the range -1..1)
loudness = 1


  ;;;; default (template) configuration section for component 'cWindower' ;;;;
[windower:cWindower]
reader.dmLevel = frames
writer.dmLevel = windows
gain = 1
winFunc = gauss
sigma = 0.400000
 

  ;;;; default (template) configuration section for component 'cTransformFFT' ;;;;
[transformFFT:cTransformFFT]
reader.dmLevel = windows
writer.dmLevel = fftc
zeroPadSymmetric = 0
 

[fftmp:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag
 

[acf:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=acf
 

[cep:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=cepstrum
cepstrum=1
 

  ;;;; default (template) configuration section for component 'cPitchACF' ;;;;
[pitchACF:cPitchACF]
reader.dmLevel = acf;cepstrum
writer.dmLevel = pitchAcf
// nameAppend = 
copyInputName = 1
EOIlevel = 0
processArrayFields = 0
includeSingleElementFields = 0
preserveFieldNames = 1
maxPitch = 500
voiceProb = 1
voiceQual = 0
HNR = 0
HNRdB = 0
linHNR = 0
F0 = 1
F0raw = 1
F0env = 0
voicingCutoff = 0.550000
 

  ;;;; default (template) configuration section for component 'cContourSmoother' ;;;;
[contourSmoother:cContourSmoother]
reader.dmLevel = pitchAcf
writer.dmLevel = pitchSmo
nameAppend = sma
copyInputName = 1
EOIlevel = 0
noPostEOIprocessing = 0
smaWin = 3
noZeroSma = 1
 

  ;;;; default (template) configuration section for component 'cCsvSink' ;;;;
[csvSink:cCsvSink]
reader.dmLevel = energy;loudness;pitchAcf;pitchSmo
errorOnNoOutput = 0
filename = \cm[outputfile(O){output.csv}:file name of the output CSV file]
delimChar = ;
append = 0
timestamp = 1
frameTime = 1
number = 1
frameIndex = 1
printHeader = 1
flush = 0
// instanceBase = 
// instanceName = 
 

// ################### END OF openSMILE CONFIG FILE ######################

